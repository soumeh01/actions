name: 'vcpkg environment'
description: 'Activate vcpkg environment'
author: 'Jonatan Antoni <jonatan.antoni@arm.com>'

inputs:
  config:
    description: "Path to vcpkg-configuration.json"
    required: false
    default: "./vcpkg-configuration.json"
  vcpkg-root:
    description: "Root folder for vcpkg"
    default: "${{ github.workspace }}/.vcpkg"
    required: false
  cache:
    description: "Cache key suffix, set to empty to disable cache."
    default: "-"
    required: false
  
runs:
  using: 'composite'
  steps:
    - name: Cache vcpkg
      uses: actions/cache@v4
      if: ${{ inputs.cache }}
      with:
        key: vcpkg-${{ runner.os }}-${{ runner.arch }}-${{ github.run_id }}
        restore-keys: |
          vcpkg-${{ runner.os }}-${{ runner.arch }}-
        path: ${{ inputs.vcpkg-root }}

    - name: Check if cache restore
      id: check_cache_restore
      shell: bash
      run: |
        VCPKG_PATH=$(echo $VCPKG_ROOT | sed 's|\\|/|g')
        if [ -z "$(ls -A $VCPKG_PATH)" ]; then
          echo "No cache restored"
          echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV
        else
          echo "Cache restored"
          echo "VCPKG_ROOT=${{ inputs.vcpkg-root }}" >> $GITHUB_ENV
        fi

    - name: Set up vcpkg environment windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        if (Test-Path "$env:VCPKG_ROOT\vcpkg-init.ps1") {
          Write-Host "VCPKG_ROOT=${{ inputs.vcpkg-root }}"
          . "$env:VCPKG_ROOT\vcpkg-init.ps1"
        } else {
          Write-Host "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT"
        }

    - name: Set up vcpkg environment for linux or macOS
      if: runner.os != 'Windows'
      shell: bash
      run: |
        if [ -f "$VCPKG_ROOT/vcpkg-init" ]; then
          echo Hello
          echo "VCPKG_ROOT=${{ inputs.vcpkg-root }}" >> $GITHUB_ENV
          . "$VCPKG_ROOT/vcpkg-init"
        else
          echo World
          echo $VCPKG_INSTALLATION_ROOT
          echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV
        fi




    # - name: Set up vcpkg environment windows
    #   if: runner.os == 'Windows'
    #   shell: pwsh
    #   env:
    #     VCPKG_ROOT: ${{ inputs.vcpkg-root }}
    #   run: |
    #     Write-Host "VCPKG_ROOT=${{ inputs.vcpkg-root }}"
    #     if (Test-Path "$env:VCPKG_ROOT\vcpkg-init.ps1") {
    #       . "$env:VCPKG_ROOT\vcpkg-init.ps1"
    #     } else {
    #       iex (iwr -useb https://aka.ms/vcpkg-init.ps1)
    #     }

    # - name: Set up vcpkg environment for linux or macOS
    #   if: runner.os != 'Windows'
    #   shell: bash
    #   env:
    #     VCPKG_ROOT: ${{ inputs.vcpkg-root }}
    #   run: |
    #     echo "VCPKG_ROOT=${{ inputs.vcpkg-root }}" >> $GITHUB_ENV
    #     if [ -f "$VCPKG_ROOT/vcpkg-init" ]; then
    #       . "$VCPKG_ROOT/vcpkg-init"
    #     else
    #       . <(curl https://aka.ms/vcpkg-init.sh -L)
    #     fi

    - name: locate vcpkg
      shell: bash
      run: |
        echo $VCPKG_ROOT

    - name: Activate vcpkg
      if: success()
      shell: bash
      run: |
        $VCPKG_ROOT/vcpkg x-update-registry --all
        cd $(dirname "${{ inputs.config }}")
        $VCPKG_ROOT/vcpkg activate --json=env.json
        echo "Preserving vcpkg PATH ..."
        jq '.paths.PATH[]' env.json | tr -d '\"' 1>&2 >> $GITHUB_PATH
        echo "Preserving vcpkg ENV ..."
        jq '.tools | to_entries | map("\(.key)=\(.value)")[]' env.json | tr -d '\"' 1>&2 >> $GITHUB_ENV
        rm env.json
